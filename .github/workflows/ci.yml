name: E-Commerce Test Automation with Reports

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test-with-reports:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        echo "✅ Dependencies installed"
    
    - name: Create reports directory
      run: |
        mkdir -p reports
        echo "✅ Reports directory created"
    
    - name: Run tests with integrated report configuration
      run: |
        # Use the report configurations from pyproject.toml
        pytest tests/ -v --tb=short
        echo "✅ Tests executed with HTML and XML reports generated"
      continue-on-error: true
    
    - name: Upload test reports as artifacts
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-reports-${{ github.run_number }}
        path: |
          reports/report.html
          reports/junit_report.xml
        retention-days: 30
    
    - name: Publish test results to GitHub
      uses: dorny/test-reporter@v1
      if: always()
      with:
        name: Test Results
        path: reports/junit_report.xml
        reporter: java-junit
        fail-on-error: false
    
    - name: Comment test summary on PR
      if: github.event_name == 'pull_request' && always()
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          const path = 'reports/junit_report.xml';
          
          if (fs.existsSync(path)) {
            const testResults = fs.readFileSync(path, 'utf8');
            const testCount = (testResults.match(/testcase/g) || []).length;
            const failures = (testResults.match(/failure/g) || []).length;
            const errors = (testResults.match(/error/g) || []).length;
            const passed = testCount - failures - errors;
            
            const body = `## 📊 Test Results Summary
            
            - ✅ **Passed**: ${passed}
            - ❌ **Failed**: ${failures}
            - 🚨 **Errors**: ${errors}
            - 📈 **Total**: ${testCount}
            
            📋 **Reports Available**: Download test-reports artifact for detailed HTML report.`;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: body
            });
          }
